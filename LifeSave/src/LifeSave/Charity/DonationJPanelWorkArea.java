/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package LifeSave.Charity;

import LifeSaveMain.EcoSystem;
import LifeSave.Utilities.Charity;
import LifeSave.Utilities.ValidateNumbers;
import LifeSave.Utilities.ValidatePhoneNumber;
import LifeSave.Utilities.ValidateStrings;
import LifeSave.Utilities.Validation;
import LifeSave.Organizations.UserAccountsOrg;
import LifeSave.UserAccounts.UserAccount;
import LifeSave.WorkQueues.CharityRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author jkoti
 */
public class DonationJPanelWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;
   
    /**
     * Creates new form DonationJPanelWorkArea
     */
    public DonationJPanelWorkArea(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        addInputVerifiers();
        toAccntNumberField.setText(Charity.toAccountNumber);
    }
    
    
      private void addInputVerifiers() {
        InputVerifier noValidation = new ValidateNumbers();
        amountField.setInputVerifier(noValidation);
        monthField.setInputVerifier(noValidation);
        yearField.setInputVerifier(noValidation);
        
        InputVerifier phnumberValidation = new ValidatePhoneNumber();
        cardNumberField.setInputVerifier(phnumberValidation);
        
         
        InputVerifier stringValidation = new ValidateStrings();
        nameTxtField.setInputVerifier(stringValidation);
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageEnt = new javax.swing.JLabel();
        helpName = new javax.swing.JLabel();
        cardNumberField = new javax.swing.JTextField();
        expiryDate = new javax.swing.JLabel();
        monthField = new javax.swing.JTextField();
        yearField = new javax.swing.JTextField();
        amount = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        toAccntNumber = new javax.swing.JLabel();
        toAccntNumberField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));

        manageEnt.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        manageEnt.setText("Charity Funding");

        helpName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        helpName.setText("Enter Card Number (10 Digits)");

        expiryDate.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        expiryDate.setText("Enter Expiry Date(MM/YYYY)");

        amount.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        amount.setText("Enter Amount");

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        name.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        name.setText("Enter Name");

        toAccntNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        toAccntNumber.setText("To Account Number");

        toAccntNumberField.setEditable(false);
        toAccntNumberField.setBackground(new java.awt.Color(204, 255, 204));
        toAccntNumberField.setEnabled(false);

        backJButton.setText("<< back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(manageEnt, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(backJButton)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(toAccntNumber)
                            .addGap(18, 18, 18)
                            .addComponent(toAccntNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(404, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpName)
                    .addComponent(amount)
                    .addComponent(name)
                    .addComponent(expiryDate))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(submitBtn)
                        .addGap(45, 45, 45)
                        .addComponent(cancelBtn))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nameTxtField)
                        .addComponent(amountField)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(manageEnt)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toAccntNumber)
                    .addComponent(toAccntNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(name)
                        .addGap(18, 18, 18)
                        .addComponent(helpName)
                        .addGap(18, 18, 18)
                        .addComponent(expiryDate)
                        .addGap(18, 18, 18)
                        .addComponent(amount)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBtn)
                    .addComponent(cancelBtn))
                .addGap(12, 12, 12)
                .addComponent(backJButton)
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
       if(nameTxtField.getText().trim().isEmpty() || 
               cardNumberField.getText().length()>10 || 
               monthField.getText().length()>2 || 
               yearField.getText().length()>4 || amountField.getText().length()<0)
       {
        JOptionPane.showMessageDialog(null, "Please enter valid input!", "warning",JOptionPane.WARNING_MESSAGE);
        return;       
       }
       try
       {
       int month = Integer.parseInt(monthField.getText());
       int year = Integer.parseInt(yearField.getText());
       if(month<0 || month > 12)
       {
       JOptionPane.showMessageDialog(null, "Please enter month between 1 and 12!", "warning",JOptionPane.WARNING_MESSAGE);
        return;     
       }
       if(year<2015 || year>2050)
       {
        JOptionPane.showMessageDialog(null, "Please enter valid expiry year!", "warning",JOptionPane.WARNING_MESSAGE);
        return;       
       }
      
       DateFormat df = new SimpleDateFormat("EEE, MMM d, YYYY hh:mm aaa");
       Calendar cal = Calendar.getInstance();
       String timestamp = df.format(cal.getTime());
       
       Charity donation = userAccount.getPerson().addCharity();
       
       donation.setAmount(amountField.getText());
       donation.setDonationDate(timestamp);
       donation.setAccntName(nameTxtField.getText());
       donation.setAccntNumber(cardNumberField.getText());
      
           try
           {
           CharityRequest donationRequest = new CharityRequest();
           donationRequest.setCharity(donation);
           donationRequest.setFundedBy(userAccount.getUserName());
           donationRequest.setSender(userAccount);
           donationRequest.setReqDate(new Date());
           donationRequest.setWork("Charity Funds");
           
           userAccount.getWorkQueue().getWorkRequestList().add(donationRequest);
           
           UserAccount ua = getLifeSaveManagerAccnt();
           if(ua==null)
           {
            JOptionPane.showMessageDialog(null, "Please verify if Life Save Manager account exists!", "warning",JOptionPane.WARNING_MESSAGE);
           userAccount.getWorkQueue().getWorkRequestList().remove(donationRequest);  
            return;   
           }
           if(ua!=null)
           {
            donationRequest.setReceiver(ua);
            donationRequest.setSolveDate(new Date());
            ua.getWorkQueue().getWorkRequestList().add(donationRequest); 
            donationRequest.setStatus("Completed");
           JOptionPane.showMessageDialog(null, "Payment successful, Thank You", "success",JOptionPane.PLAIN_MESSAGE);
            }
           else
           {
           userAccount.getWorkQueue().getWorkRequestList().remove(donationRequest);  
           }
           }
           catch(Exception e)
            {
           JOptionPane.showMessageDialog(null, "Please verify if Life Save manager acccount exists!", "warning",JOptionPane.WARNING_MESSAGE);
           return;      
            }
        resetFields();
      }
       catch(Exception e)
       {
      JOptionPane.showMessageDialog(null, "Please enter valid data!", "warning",JOptionPane.WARNING_MESSAGE);
       return;      
       }
    }//GEN-LAST:event_submitBtnActionPerformed
    
    public UserAccount getLifeSaveManagerAccnt()
    {
        try
        {
        UserAccountsOrg supervisorOrganization = (UserAccountsOrg)Validation.getSupervisorOrganization(ecoSystem, userAccount);
        UserAccount mngrAccnt = null;
        if(supervisorOrganization==null)
        {
        JOptionPane.showMessageDialog(null, "Account Manager Organization does not exist!", "warning",JOptionPane.WARNING_MESSAGE);
        return mngrAccnt;  
        }
      
        for(UserAccount ua : supervisorOrganization.getUserAccountDirectory().getUserAccountList())
        {
            
         if((ua.getRole().toString()).equals("LifeSaveManagerRole"))  
         {
          mngrAccnt = ua;   
         }
        }
        return mngrAccnt;
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(null, "Please verify if User Account organization exist!", "warning",JOptionPane.WARNING_MESSAGE);
        
        return null;      
        }
   
    }
    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
       resetFields();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    public void resetFields()
    {
     cardNumberField.setText("");
     monthField.setText("");
     yearField.setText("");
     amountField.setText("");
     nameTxtField.setText("");
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amount;
    private javax.swing.JTextField amountField;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField cardNumberField;
    private javax.swing.JLabel expiryDate;
    private javax.swing.JLabel helpName;
    private javax.swing.JLabel manageEnt;
    private javax.swing.JTextField monthField;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel toAccntNumber;
    private javax.swing.JTextField toAccntNumberField;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables
}
